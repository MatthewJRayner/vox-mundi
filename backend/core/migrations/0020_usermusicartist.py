# Generated by Django 5.2.5 on 2025-10-08 23:28

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0019_rename_awards_won_userfilm_awards_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserMusicArtist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rating', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('notes', models.TextField(blank=True)),
                ('visibility', models.CharField(choices=[('public', 'Public'), ('private', 'Private')], default='private', max_length=20)),
                ('name', models.CharField(max_length=200)),
                ('bio', models.TextField(blank=True)),
                ('photo', models.URLField(blank=True, null=True)),
                ('external_links', models.JSONField(blank=True, default=list)),
                ('year_active_start', models.IntegerField(blank=True, null=True)),
                ('year_active_end', models.IntegerField(blank=True, null=True)),
                ('notable_works', models.JSONField(blank=True, default=list, null=True)),
                ('ranking_tier', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('favourite', models.BooleanField(default=False)),
                ('best_albums', models.JSONField(blank=True, default=list, null=True)),
                ('best_songs', models.JSONField(blank=True, default=list, null=True)),
                ('cultures', models.ManyToManyField(related_name='%(class)s_items', to='core.culture')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_music_artists', to='core.person')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User Music Artists',
                'indexes': [models.Index(fields=['user', 'person'], name='user_music_artist_idx')],
            },
        ),
    ]
